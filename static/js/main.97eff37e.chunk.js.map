{"version":3,"sources":["components/Icon.tsx","components/Nav.tsx","components/Layout.tsx","lib/createId.ts","hooks/useUpdate.ts","hooks/useTags.ts","components/Button.tsx","components/Center.tsx","components/Space.tsx","pages/Tags/index.tsx","pages/Money/TagsSection.tsx","components/Input.tsx","pages/Money/NoteSection.tsx","pages/Money/CategorySection.tsx","pages/Money/NumberPadSection.tsx","utils/compute.ts","hooks/useRecords.ts","pages/Money/index.tsx","pages/Statistics.tsx","pages/NotFound.tsx","pages/Tag/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Icon","props","name","children","className","rest","classnames","aria-hidden","xlinkHref","NavWrapper","styled","nav","Nav","to","activeClassName","Wrapper","div","Main","Layout","mainRef","useRef","useEffect","setTimeout","current","scrollTop","ref","data-x","defaultProps","id","parseInt","window","localStorage","getItem","createId","setItem","toString","useUpdate","fn","dependency","count","useTags","useState","tags","setTags","localTags","JSON","parse","length","stringify","findTag","find","t","updateTags","map","tag","deleteTag","filter","addTag","tagName","prompt","getName","Button","button","Center","Space","TagList","ol","Tags","key","onClick","section","TagsSection","selectedTagIds","value","tagId","includes","onChange","onToggleTag","Label","label","Input","NoteSection","note","event","target","placeholder","categoryMap","CategorySection","categoryList","category","c","type","NumberPadSection","output","e","text","textContent","parseFloat","slice","setOutput","prevOutput","parseOutput","onOk","useRecords","records","setRecords","addRecord","record","MoneyLayout","defaultForm","tagIds","amount","Money","obj","alert","createdAt","Date","toISOString","Item","Header","h3","Statistics","setCategory","selectedRecords","hash","forEach","r","dayjs","format","push","array","Object","entries","sort","a","b","date","join","NotFound","InputWrapper","Topbar","header","Tag","useParams","history","useHistory","goBack","back","App","exact","path","from","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97eff37e.chunk.js","sourcesContent":["import * as React from 'react'\nimport classnames from 'classnames'\n\ntype IconProps = React.SVGAttributes<SVGElement> & {\n  name?: string\n}\n\nconst Icon: React.FunctionComponent<IconProps> = (props) => {\n  const {name, children, className, ...rest} = props\n\n  return (\n    <svg className={classnames('icon', className)} aria-hidden=\"true\" {...rest}>\n      {\n        props.name &&\n        <use xlinkHref={`#icon-${props.name}`}/>\n      }\n    </svg>\n  )\n}\n\nexport default Icon\n","import styled from 'styled-components'\nimport {NavLink} from 'react-router-dom'\nimport React from 'react'\nimport Icon from './Icon'\n\nconst NavWrapper = styled.nav`\n  line-height: 24px;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.25);\n  background: #fff;\n  > ul {\n    display: flex;\n    > li {\n      padding: 4px 0;\n      width: 33.333333%;\n      text-align: center;\n      font-size: .9em;\n      > a {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        .icon {\n         width: 24px;\n         height: 24px;\n        }\n        &.selected {\n          color: red;\n        }\n      }\n    }\n  }\n`\n\nconst Nav: React.FunctionComponent = () => {\n  return (\n    <NavWrapper>\n      <ul>\n        <li>\n          <NavLink to=\"/tags\" activeClassName=\"selected\">\n            <Icon name=\"tag\"/>\n            标签页\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/money\" activeClassName=\"selected\">\n            <Icon name=\"money\"/>\n            记账页\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/statistics\" activeClassName=\"selected\">\n            <Icon name=\"chart\"/>\n            统计页\n          </NavLink>\n        </li>\n      </ul>\n    </NavWrapper>\n  )\n}\n\nexport default Nav\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport Nav from './Nav'\nimport {useEffect, useRef} from 'react'\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Main = styled.div`\n  flex-grow: 1;\n  overflow: auto;\n`\n\ntype TProps = {\n  className?: string\n  scrollTop?: number\n}\n\nconst Layout: React.FC<TProps> = (props) => {\n  const mainRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    setTimeout(() => {\n      if (!mainRef.current) return\n\n      mainRef.current.scrollTop = props.scrollTop!\n    }, 0)\n  }, [props.scrollTop])\n\n  return (\n    <Wrapper>\n      <Main ref={mainRef} className={props.className} data-x=\"main\">\n        {props.children}\n      </Main>\n      <Nav/>\n    </Wrapper>\n  )\n}\n\nLayout.defaultProps = {\n  scrollTop: 0\n}\n\nexport default Layout\n","let id = parseInt(window.localStorage.getItem('idMax') || '0')\n\nconst createId = () => {\n  id += 1\n  window.localStorage.setItem('idMax', id.toString())\n  return id\n}\n\nexport default createId\n","import {useEffect, useRef} from 'react'\n\nconst useUpdate = (fn: () => void, dependency: any[]) => {\n  const count = useRef(0)\n  useEffect(() => {\n    count.current += 1\n  })\n  useEffect(() => {\n    if (count.current > 1) {\n      fn()\n    }\n  }, [fn, dependency])\n}\n\nexport default useUpdate\n","import {useEffect, useState} from 'react'\nimport createId from '../lib/createId'\nimport useUpdate from './useUpdate'\n\nexport type TTag = {\n  id: number\n  name: string\n}\n\nconst useTags = () => {\n  const [tags, setTags] = useState<TTag[]>([])\n\n  useEffect(() => {\n    let localTags = JSON.parse(window.localStorage.getItem('tags') || '[]')\n    if (localTags.length === 0) {\n      localTags = [\n        {id: createId(), name: '衣'},\n        {id: createId(), name: '食'},\n        {id: createId(), name: '住'},\n        {id: createId(), name: '行'},\n      ]\n    }\n    setTags(localTags)\n  }, []) // 第一次渲染，组件挂载时执行\n  useUpdate(() => {\n    window.localStorage.setItem('tags', JSON.stringify(tags))\n  }, tags) // 监听 tags\n\n  const findTag = (id: number) => tags.find(t => t.id === id)\n\n  const updateTags = (id: number, {name}: { name: string }) => {\n    setTags(tags.map(tag => tag.id === id ? {id, name} : tag))\n  }\n\n  const deleteTag = (id: number) => {\n    setTags(tags.filter(tag => tag.id !== id))\n  }\n\n  const addTag = () => {\n    const tagName = window.prompt('新标签的名称为')\n    if (tagName !== null && tagName !== '') {\n      setTags([...tags, {\n        id: createId(),\n        name: tagName\n      }])\n    }\n  }\n\n  const getName = (id: number) => {\n    return tags.find(t => t.id === id)\n  }\n\n  return {tags, setTags, findTag, updateTags, deleteTag, addTag, getName}\n}\n\nexport default useTags\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  padding: 8px 12px;\n  font-size: 18px;\n  border: none;\n  border-radius: 4px;\n  background: #f60;\n  color: #fff;\n`\nexport default Button\n","import styled from 'styled-components'\n\nconst Center = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nexport default Center\n","import styled from 'styled-components'\n\nconst Space = styled.div`\n  height: 16px;\n`\n\nexport default Space\n","import * as React from 'react'\nimport Layout from '../../components/Layout'\nimport useTags from '../../hooks/useTags'\nimport styled from 'styled-components'\nimport Icon from '../../components/Icon'\nimport {Link} from 'react-router-dom'\nimport Button from '../../components/Button'\nimport Center from '../../components/Center'\nimport Space from '../../components/Space'\n\nconst TagList = styled.ol`\n  font-size: 16px;\n  background: #fff;\n  > li {\n    margin-left: 16px;\n    border-bottom: 1px solid #e5e5e5;\n    line-height: 20px;\n    > a {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 12px 16px 12px 0;\n    }\n  }\n`\n\nconst Tags: React.FunctionComponent = () => {\n  const {tags, addTag} = useTags()\n\n  return (\n    <Layout>\n      <TagList>\n        {tags.map(tag =>\n          <li key={tag.id}>\n            <Link to={`/tags/${tag.id}`}>\n              <span className=\"one-line\">{tag.name}</span>\n              <Icon name=\"right\"/>\n            </Link>\n          </li>\n        )}\n      </TagList>\n      <Center>\n        <Space/>\n        <Button onClick={addTag}>新增标签</Button>\n      </Center>\n    </Layout>\n  )\n}\n\nexport default Tags\n","import styled from 'styled-components'\nimport * as React from 'react'\nimport useTags from '../../hooks/useTags'\n\nconst Wrapper = styled.section`\n  padding: 12px 16px;\n  background: #ffffff;\n  flex-grow: 1;\n  > ol {\n    margin: 0 -12px;\n    > li {\n      display: inline-block;\n      padding: 4px 16px;\n      margin: 8px 12px;\n      background: #d9d9d9;\n      border-radius: 18px;\n      font-size: 14px;\n      &.selected {\n        background: #f60;\n      }\n    }\n  }\n  > button {\n    padding: 2px 4px;\n    margin-bottom: 8px;\n    background: none;\n    border: none;\n    border-bottom: 1px solid #333;\n    color: #666;\n  }\n`\n\ntype TProps = {\n  value: number[]\n  onChange: (tagIds: number[]) => void\n}\n\nconst TagsSection: React.FC<TProps> = (props) => {\n  const {tags, addTag} = useTags()\n\n  const selectedTagIds = props.value\n\n  const onToggleTag = (tagId: number) => {\n    if (selectedTagIds.find(id => id === tagId)) {\n      props.onChange(selectedTagIds.filter(id => id !== tagId))\n    } else {\n      props.onChange([...selectedTagIds, tagId])\n    }\n  }\n\n  const selectedClass = (tagId: number) => selectedTagIds.includes(tagId) ? 'selected' : ''\n\n  return (\n    <Wrapper>\n      <ol>\n        {tags && tags.map(tag =>\n          <li key={tag.id}\n              className={selectedClass(tag.id)}\n              onClick={() => onToggleTag(tag.id)}>\n            {tag.name}\n          </li>\n        )}\n      </ol>\n      <button onClick={addTag}>新增标签</button>\n    </Wrapper>\n  )\n}\n\nexport default TagsSection\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.label`\n   display: flex;\n   align-items: center;\n   > span {\n      margin-right: 16px;\n   }\n   > input {\n      flex-grow: 1;\n      height: 44px;\n      background: none;\n      border: none;\n   }\n`\n\ntype TProps = React.InputHTMLAttributes<HTMLInputElement> & {\n  label: string\n}\n\nconst Input: React.FC<TProps> = (props) => {\n  const {label, ...rest} = props\n\n  return (\n    <Label>\n      <span>{props.label}</span>\n      <input {...rest}/>\n    </Label>\n  )\n}\n\nexport default Input\n","import styled from 'styled-components'\nimport * as React from 'react'\nimport {ChangeEventHandler} from 'react'\nimport Input from '../../components/Input'\n\nconst Wrapper = styled.section`\n  background: #f5f5f5;\n  padding: 14px 16px;\n  font-size: 14px;\n`\n\ntype TProps = {\n  value: string\n  onChange: (note: string) => void\n}\n\nconst NoteSection: React.FC<TProps> = (props) => {\n  const note = props.value\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    props.onChange(event.target.value)\n  }\n\n  return (\n    <Wrapper>\n      <Input label=\"标签\" onChange={onChange} value={note} placeholder=\"请填写备注\"/>\n    </Wrapper>\n  )\n}\n\nexport default NoteSection\n","import styled from 'styled-components'\nimport * as React from 'react'\nimport {useState} from 'react'\n\nconst Wrapper = styled.section`\n  font-size: 24px;\n  > ul {\n    display: flex;\n    background: #c4c4c4;\n    > li {\n      padding: 16px 0;\n      width: 50%;\n      text-align: center;\n      position: relative;\n      &.selected::after {\n        content: '';\n        display: block;\n        position: absolute;\n        height: 3px;\n        width: 100%;\n        left: 0;\n        bottom: 0;\n        background: black;\n      }\n    }\n  }\n`\n\nconst categoryMap = {\n  '-': '支出',\n  '+': '收入'\n}\n\ntype TCategory = keyof typeof categoryMap\ntype TProps = {\n  value: TCategory\n  onChange: (category: TCategory) => void\n}\n\nconst CategorySection: React.FC<TProps> = (props) => {\n  const [categoryList] = useState<TCategory[]>(['-', '+'])\n\n  const category = props.value\n\n  const selectedClass = (type: string) => category === type ? 'selected' : ''\n\n  return (\n    <Wrapper>\n      <ul>\n        {categoryList.map(c =>\n          <li key={c}\n              className={selectedClass(c)}\n              onClick={() => props.onChange(c)}>\n            {categoryMap[c]}\n          </li>\n        )}\n      </ul>\n    </Wrapper>\n  )\n}\n\nexport default CategorySection\n","import styled from 'styled-components'\nimport * as React from 'react'\nimport {parseOutput} from '../../utils/compute'\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  .output {\n    background: #fff;\n    font-size: 37px;\n    line-height: 72px;\n    text-align: right;\n    padding: 0 16px;\n    box-shadow: inset 0 -5px 5px -5px rgba(0, 0, 0, 0.25),\n                inset 0 5px 5px -5px rgba(0, 0, 0, 0.25);\n  }\n  .pad {\n    > button {\n      float: left;\n      width: 25%;\n      height: 64px;\n      font-size: 18px;\n      border: none;\n      &.ok {\n        height: 128px;\n        float: right;\n      }\n      &.zero {\n        width: 50%;\n      }\n      &:nth-child(1) {\n        background: #f2f2f2;\n      }\n      &:nth-child(2), &:nth-child(5) {\n        background: #e0e0e0;\n      }\n      &:nth-child(3), &:nth-child(6), &:nth-child(9) {\n        background: #d3d3d3;\n      }\n      &:nth-child(4), &:nth-child(7), &:nth-child(10) {\n        background: #c1c1c1;\n      }\n      &:nth-child(8), &:nth-child(11), &:nth-child(13) {\n        background: #b8b8b8;\n      }\n      &:nth-child(12), &:nth-child(14) {\n        background: #9a9a9a;\n      }\n    }\n  }\n`\n\ntype TProps = {\n  value: number\n  onChange: (value: number) => void\n  onOk: () => void\n}\n\nconst NumberPadSection: React.FC<TProps> = (props) => {\n  const output = props.value.toString()\n\n  const setOutput = (output: string) => {\n    let value: number\n\n    if (output.length > 16) {\n      value = parseFloat(output.slice(0, 16))\n    } else if (output.length === 0) {\n      value = 0\n    } else {\n      value = parseFloat(output)\n    }\n\n    props.onChange(value)\n  }\n\n  const onClickPad = (e: React.MouseEvent<HTMLDivElement>) => {\n    const text = (e.target as HTMLButtonElement).textContent\n    if (text === null) return\n\n    if (text === 'OK') {\n      props.onOk()\n      return\n    }\n\n    setOutput(parseOutput(output, text))\n  }\n\n  return (\n    <Wrapper>\n      <div className=\"output\">\n        {output}\n      </div>\n      <div className=\"pad clearfix\" onClick={onClickPad}>\n        <button>1</button>\n        <button>2</button>\n        <button>3</button>\n        <button>删除</button>\n\n        <button>4</button>\n        <button>5</button>\n        <button>6</button>\n        <button>清空</button>\n\n        <button>7</button>\n        <button>8</button>\n        <button>9</button>\n        <button className=\"ok\">OK</button>\n\n        <button className=\"zero\">0</button>\n        <button className=\"dot\">.</button>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default NumberPadSection\n","\nexport const parseOutput = (prevOutput = '0', text: string): string => {\n  switch (text) {\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n      return prevOutput === '0' ? text : prevOutput + text\n    case '.':\n      return prevOutput.includes('.') ? prevOutput : prevOutput + '.'\n    case '删除':\n      return prevOutput.length === 1 ? '' : prevOutput.slice(0, -1)\n    case '清空':\n      return ''\n    default:\n      return prevOutput\n  }\n}\n","import {useEffect, useState} from 'react'\nimport useUpdate from './useUpdate'\n\nexport type TRecord = {\n  tagIds: number[]\n  note: string\n  category: '+' | '-'\n  amount: number\n  createdAt: string\n}\n\nexport const useRecords = () => {\n  const [records, setRecords] = useState<TRecord[]>([])\n\n  useEffect(() => {\n    setRecords(JSON.parse(window.localStorage.getItem('records') || '[]'))\n  }, [])\n  useUpdate(() => {\n    window.localStorage.setItem('records', JSON.stringify(records))\n  }, records)\n\n  const addRecord = (record: TRecord) => {\n    setRecords([...records, record])\n  }\n\n  return {records, addRecord}\n}\n","import * as React from 'react'\nimport {useState} from 'react'\nimport Layout from '../../components/Layout'\nimport styled from 'styled-components'\nimport TagsSection from './TagsSection'\nimport NoteSection from './NoteSection'\nimport CategorySection from './CategorySection'\nimport NumberPadSection from './NumberPadSection'\nimport {useRecords} from '../../hooks/useRecords'\n\nconst MoneyLayout = styled(Layout)`\n  display: flex;\n  flex-direction: column;\n`\n\nconst defaultForm = {\n  tagIds: [] as number[],\n  note: '',\n  category: '-' as ('-' | '+'),\n  amount: 0\n}\n\nconst Money: React.FunctionComponent = () => {\n  const [record, setRecords] = useState(defaultForm)\n\n  const {addRecord} = useRecords()\n\n  const onChange = (obj: Partial<typeof record>) => {\n    setRecords({...record, ...obj})\n  }\n\n  const submit = () => {\n    if (record.amount <= 0) {\n      return alert('不能为0')\n    }\n    if (record.tagIds.length === 0) {\n      return alert('一定要选标签')\n    }\n\n    addRecord({\n      ...record,\n      createdAt: new Date().toISOString()\n    })\n    alert('保存成功')\n    setRecords(defaultForm)\n  }\n\n  return (\n    <MoneyLayout scrollTop={9999}>\n      <TagsSection value={record.tagIds}\n                   onChange={tagIds => onChange({tagIds})}/>\n      <NoteSection value={record.note}\n                   onChange={note => onChange({note})}/>\n      <CategorySection value={record.category}\n                       onChange={category => onChange({category})}/>\n      <NumberPadSection value={record.amount}\n                        onOk={submit}\n                        onChange={amount => onChange({amount})}/>\n    </MoneyLayout>\n  )\n}\n\nexport default Money\n","import * as React from 'react'\nimport Layout from '../components/Layout'\nimport {useState} from 'react'\nimport CategorySection from './Money/CategorySection'\nimport {TRecord, useRecords} from '../hooks/useRecords'\nimport useTags from '../hooks/useTags'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\n\nconst Item = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background: white;\n  font-size: 18px;\n  line-height: 20px;\n  padding: 10px 16px;\n  \n  > .note {\n    margin-left: 16px;\n    margin-right: auto;\n    color: #666;\n  }\n`\n\nconst Header = styled.h3`\n  padding: 10px 16px;\n  font-size: 18px;\n`\n\nconst Statistics: React.FunctionComponent = () => {\n  const [category, setCategory] = useState<'-' | '+'>('-')\n  const {records} = useRecords()\n  const {getName} = useTags()\n  const selectedRecords = records.filter(record => record.category === category)\n\n  let hash: { [key: string]: TRecord[] } = {}\n\n  selectedRecords.forEach(r => {\n    const key = dayjs(r.createdAt).format('YYYY年MM月DD日')\n    const value = r\n\n    if (!(key in hash)) {\n      hash[key] = []\n    }\n    hash[key].push(value)\n  })\n\n  const array = Object.entries(hash).sort((a, b) => {\n    if (a[0] === b[0]) return 0\n    if (a[0] > b[0]) return 1\n    if (a[0] < b[0]) return -1\n    return 0\n  })\n\n  return (\n    <Layout>\n      <CategorySection value={category}\n                       onChange={(value) => setCategory(value)}>\n      </CategorySection>\n      {array.map(([date, record]) =>\n        <div>\n          <Header>{date}</Header>\n          <div>\n            {record && record.map(r => {\n              return (\n                <Item key={r.createdAt}>\n                  <div className=\"tags\">\n                    {r.tagIds.map(tagId => getName(tagId)!.name).join(',')}\n                  </div>\n                  {\n                    r.note && <div className=\"note\">\n                      {r.note}\n                    </div>\n                  }\n                  <div className=\"amount\">\n                    $ {r.amount}\n                  </div>\n                </Item>\n              )\n            })}\n          </div>\n        </div>\n      )}\n    </Layout>\n  )\n}\n\nexport default Statistics\n","import * as React from 'react'\n\nconst NotFound: React.FunctionComponent = () => {\n  return (\n    <h2>页面不存在</h2>\n  )\n}\n\nexport default NotFound\n","import * as React from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport useTags from '../../hooks/useTags'\nimport Layout from '../../components/Layout'\nimport Icon from '../../components/Icon'\nimport Button from '../../components/Button'\nimport styled from 'styled-components'\nimport Input from '../../components/Input'\nimport Center from '../../components/Center'\nimport Space from '../../components/Space'\nimport {ChangeEventHandler} from 'react'\n\ntype TParams = {\n  tagId: string\n}\n\nconst InputWrapper = styled.div`\n  background: white;\n  padding: 0 16px;\n  margin-top: 16px;\n`\n\nconst Topbar = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  line-height: 20px;\n  padding: 14px;\n  background: white;\n`\n\nconst Tag: React.FC = () => {\n  const {findTag, updateTags, deleteTag} = useTags()\n  const {tagId} = useParams<TParams>()\n\n  const tag = findTag(parseInt(tagId))\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    updateTags(tag!.id, {name: e.target.value})\n  }\n\n  const history = useHistory()\n  const onClickBack = () => {\n    history.goBack()\n  }\n\n  return (\n    <Layout>\n      <Topbar>\n        <Icon name=\"left-copy\" onClick={onClickBack}/>\n        <span>编辑标签</span>\n        <Icon/>\n      </Topbar>\n      {\n        tag ?\n        <div>\n          <InputWrapper>\n            <Input label=\"标签名\"\n                   type=\"text\"\n                   onChange={onChange}\n                   value={tag!.name}\n                   placeholder=\"标签名\"/>\n          </InputWrapper>\n          <Space/>\n          <Center>\n            <Button onClick={() => {\n              deleteTag(tag!.id)\n              window.history.back()\n            }}>删除标签</Button>\n          </Center>\n        </div> : <Center>不存在</Center>\n      }\n    </Layout>\n  )\n}\n\nexport default Tag\n","import React from 'react'\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport Tags from './pages/Tags'\nimport Money from './pages/Money'\nimport Statistics from './pages/Statistics'\nimport NotFound from './pages/NotFound'\nimport Tag from './pages/Tag'\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/tags\">\n          <Tags/>\n        </Route>\n        <Route path=\"/tags/:tagId\">\n          <Tag/>\n        </Route>\n        <Route path=\"/money\">\n          <Money/>\n        </Route>\n        <Route path=\"/statistics\">\n          <Statistics/>\n        </Route>\n        <Redirect exact from=\"/\" to=\"/money\"/>\n        <Route>\n          <NotFound/>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/styles/global.scss'\nimport App from 'App'\nimport * as serviceWorker from 'serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}